Title: Pages

----

Excerpt:

A pages select field that allows to select one or multiple related pages

----

Guide: blueprints/fields

----

Text:

The pages field allows you to select one or more related pages. It has a handy navigator to go through the entire site tree and select the pages you want

(screenshot: pages.png)

## Example

```yaml
fields:
  related:
    label: Related Pages
    type: pages
```

## Field properties

(field-options: pages)

## Limit the selection

### Multiple or single mode

If you only want to select a single page, set multiple mode to `false` (default is `true`)

```yaml
fields:
  related:
    label: Related Pages
    type: pages
    multiple: false
```
### Maximum number of pages

You can set the maximum number of pages that can be selected:

```yaml
fields:
  related:
    label: Related Pages
    type: pages
    max: 3
```

## Sort order

By default, the Pages field displays children in ascending publishing order from oldest to newest (`num asc`). In this state, each page has a drag handle to its left, allowing users to re-order pages by clicking and dragging.

If you want to use a custom sort order when viewing in the panel (for example, to list blog posts in reverse post order, or by a 'date' field or any other page field), you can use the (link: docs/reference/objects/pages/sort-by text: sortBy) option. When used as a field option, function arguments should be listed in order, without quotes or commas. Please note this disables drag handles and drag-and-drop reordering in the Panel. You can still change the post order by clicking Change status and selecting a new position.

Please also note this has no effect on Kirby's internal page order, nor in the way they will be displayed in templates. To learn more about using sortBy in templates, please consult the (link: docs/cookbook/content/sorting text: Sorting) Cookbook entry.

### Sort by reverse publishing order

If you want to show pages from most to least recently-published, set sortBy to `num desc`. This means to sort by "number" (the number prepended to published page folders) in "descending" order (default is 'num asc' which means "by number in ascending order").

```yaml
fields:
  posts:
    label: Posts
    type: pages
    sortBy: num desc
```

### Sort alphanumerically by title

You could view all pages by their `title` field sorted alphanumerically with `sortBy: title asc`.

```yaml
sortBy: title asc
```

### Sort by date and time

If your pages have date and/or time fields, you can sort by those instead. As in the (link: docs/reference/objects/pages/sort-by text: sortBy template function), you can sort by more than one field by passing fields and options in order. The following would sort first by date descending and then by time descending, showing all pages in reverse chronological order according to page metadata.

```yaml
sortBy: date desc time desc
```

## Preview images

The default (preview) image is the first image in the folder. You can configure the (preview) image for each item using the `image` option:

```yaml
image: page.image.findBy("name", "cover")
```

### Preview image from assets folder

<since v="3.2.0">

You can also provide an image from the assets folder via a page model, for example as a fallback if the page has no images:

```php "/site/models/album.yml"
<?php

class AlbumPage extends Page
{
    public function previewImage()
    {
        if ($image = $page->images()->first()) {
          return $image;
        }
        if (file_exists(kirby()->root('assets') . "/assets/images/default.jpg")) {
            return new Asset("assets/images/default.jpg");
        }
        return false;
        
    }
}
```

And then in your blueprint

```yaml
image: page.previewImage
```

<info>
Note that a model only works for pages that share the same blueprint. For pages with different blueprints, use a (link: docs/reference/plugins/extensions/page-methods text: custom page method) instead.
</info>

</since>

For more fine-grained control you can set further options:

### `query`

An image query, default `page.image`

```yaml
image:
  query: page.children.first.image
```

### `cover`

Whether or not the image will cover the available space.
Options: `true`, `false (default)`

```yaml
image:
  cover: true
```

### `ratio`

A freely selectable image ratio

```yaml
image:
  ratio: 16/9
```

### `back`

Set an image background.
Options: `pattern (default)`, `black`, `white`
```yaml

image:
  query: page.image.findBy("name", "cover")
  cover: true
  ratio: 1/1
  back: black
```

### No image

If you don't want to show an image but the icon selected for the page, you can set the `query` option to `false`:

```yaml
image:
  query: false
```

Kirby will then either show a default page icon or the icon defined in the page blueprint.

## Info and text

The `info` and `text` properties allow you to define what information is shown for each selected item (and in the modal). You can use Kirby's (link: docs/guide/blueprints/query-language text: query language) to query any information you need.

### Text
The `text` property shows the main information for the page, by defauult that is the page title. You can however either modify what is shown and how:

```yaml
text: "{{ page.title.upper }}"
```

```yaml
text: "{{ page.title }} | {{ page.description.excerpt(20) }}"
```

### Info

With the `info` property, you can show additional information:

```yaml
info: "{{ page.images.count }}"
```

```yaml
info: "{{ page.tags }}"
```

## How to use in templates/snippets

### Single page

To convert a single page to a page object, use the [`toPage()`](/docs/reference/templates/field-methods/to-page) method:

```php
<?php if($relatedPage = $page->related()->toPage()): ?>
  <?= $relatedPage->title() ?>
<?php endif ?>
```

### Multiple pages

To convert multiple pages to a pages collection, use the [`toPages()`](/docs/reference/templates/field-methods/to-pages) method:

```php
<?php
$relatedPages =  $page->related()->toPages();
foreach($relatedPages as $relatedPage): ?>
  <?= $relatedPage->title() ?>
<?php endforeach ?>
```
